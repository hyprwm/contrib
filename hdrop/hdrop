#!/usr/bin/env bash

print_help() {
  echo ""
  echo "Usage: hdrop [OPTIONS] [COMMAND]"
  echo ""
  echo "Arguments:"
  echo "  [COMMAND]"
  echo "          The usual command you would run to start the desired program"
  echo ""
  echo "Options:"
  echo "  -b, --background"
  echo "          changes the default behaviour: if the specified program is"
  echo "          not running, launch it in the background instead of foreground."
  echo "          Thereafter 'hdrop -b' will work the same as without this flag."
  echo ""
  echo "  -h, --help"
  echo "          Print this help message"
  echo ""
  echo "  -V, --version"
  echo "          Print version"
  echo ""
  echo "Multiple instances:"
  echo ""
  echo "Multiple instances of the same program can be run concurrently, if"
  echo "different class names are assigned to each instance. Presently there is"
  echo "support for the following flags in the [COMMAND] string:"
  echo ""
  echo " -a         ('foot' terminal emulator)"
  echo " --class    (all other programs)."
  echo ""
  echo "See man page for more information"
}

print_version() {
  echo "hdrop version: 0.2.1"
}

notify() {
  notify-send "$@" || hyprctl notify 0 5000 0 "$@"
}

BACKGROUND=""

case "$1" in
"")
  notify "hdrop: missing Argument" "Run 'hdrop -h' for more information"
  print_help
  exit 1
  ;;
-h | --help)
  print_help
  exit
  ;;
-V | --version)
  print_version
  exit
  ;;
-b | --background)
  BACKGROUND="hyprctl dispatch -- exec [workspace special:hdrop silent] "
  shift
  ;;
-*)
  notify "hdrop: unrecognized flag" "Run 'hdrop -h' for more information"
  print_help
  exit 1
  ;;
esac

CLASS="$1"
COMMANDLINE="${*:1}"
ACTIVE_WORKSPACE="$(hyprctl activeworkspace -j | jq -r .id)" || notify "hdrop: error executing dependencies 'hyprctl' or 'jq'" "Check terminal output of 'hdrop $COMMANDLINE'"

case "$1" in
foot)
  OPT=$(getopt --options a: -n hdrop -- "$@")
  ;;
telegram-desktop)
  CLASS="org.telegram.desktop"
  ;;
*)
  OPT=$(getopt --longoptions class: -n hdrop -- "$@")
  ;;
esac

if [[ -n $OPT ]]; then
  eval set -- "$OPT"
  while true; do
    case "$1" in
    -a | --class)
      CLASS="$2"
      shift 2
      ;;
    *) break ;;
    esac
  done
fi

if [[ $(hyprctl clients -j | jq -r ".[] | select(.class==\"$CLASS\" and .workspace.id!=$ACTIVE_WORKSPACE)") ]]; then
  hyprctl dispatch -- movetoworkspacesilent "$ACTIVE_WORKSPACE","$CLASS" || notify "hdrop: Error moving '$COMMANDLINE' to current workspace"
  hyprctl dispatch -- focuswindow "$CLASS" || notify "hdrop: Error focusing '$COMMANDLINE' on current workspace"
elif [[ $(hyprctl clients -j | jq -r ".[] | select(.class==\"$CLASS\" and .workspace.id==$ACTIVE_WORKSPACE)") ]]; then
  hyprctl dispatch -- movetoworkspacesilent special:hdrop,"$CLASS" || notify "hdrop: Error moving '$COMMANDLINE' to workspace 'special:hdrop'"
else
  $BACKGROUND $COMMANDLINE || notify "hdrop: Error executing given command" "$COMMANDLINE"
fi
